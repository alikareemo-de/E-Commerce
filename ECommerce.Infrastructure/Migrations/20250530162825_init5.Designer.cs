// <auto-generated />
using System;
using ECommerce.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.Infrastructure.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250530162825_init5")]
    partial class init5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("ECommerce.Domain.Aggregates.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CancellationReason")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ECommerce.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ECommerce.Domain.Aggregates.Order", b =>
                {
                    b.OwnsMany("ECommerce.Domain.Entities.OrderItem", "OrderItems", b1 =>
                        {
                            b1.Property<Guid>("OrderId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("ProductRef")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Quantity")
                                .HasColumnType("INTEGER");

                            b1.HasKey("OrderId", "Id");

                            b1.ToTable("OrderItems", null, t =>
                                {
                                    t.Property("Currency")
                                        .HasColumnName("OrderItem_Currency");
                                });

                            b1.WithOwner()
                                .HasForeignKey("OrderId");

                            b1.OwnsOne("ECommerce.Domain.ValueObjects.Money", "Price", b2 =>
                                {
                                    b2.Property<Guid>("OrderItemOrderId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("OrderItemId")
                                        .HasColumnType("TEXT");

                                    b2.Property<decimal>("Amount")
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Amount");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasMaxLength(3)
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Currency");

                                    b2.HasKey("OrderItemOrderId", "OrderItemId");

                                    b2.ToTable("OrderItems");

                                    b2.WithOwner()
                                        .HasForeignKey("OrderItemOrderId", "OrderItemId");
                                });

                            b1.Navigation("Price")
                                .IsRequired();
                        });

                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
